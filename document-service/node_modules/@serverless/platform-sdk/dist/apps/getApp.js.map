{"version":3,"sources":["../../src/apps/getApp.js"],"names":["fetch","require","platformConfig","currentVersion","version","getApp","data","backendUrl","tenant","app","method","headers","Authorization","token","response","ok","text","Error","json"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,WAAR,CAAvB;AACA,IAAME,iBAAiBF,QAAQ,oBAAR,EAA8BG,OAArD;;AAEA,IAAMC;AAAA,qEAAS,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUN,MACpB,GAAEE,eAAeK,UAAW,WAAUD,KAAKE,MAAO,iBAAgBF,KAAKG,GAAI,EADvD,EAErB;AACEC,sBAAQ,KADV;AAEEC,uBAAS;AACP,gCAAgB,kBADT;AAEP,sCAAsBR,cAFf;AAGPS,+BAAgB,UAASN,KAAKO,KAAM;AAH7B;AAFX,aAFqB,CADV;;AAAA;AACPC,oBADO;;AAAA,gBAaRA,SAASC,EAbD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcQD,SAASE,IAAT,EAdR;;AAAA;AAcLA,gBAdK;AAAA,kBAeL,IAAIC,KAAJ,CAAUD,IAAV,CAfK;;AAAA;AAAA,6CAiBNF,SAASI,IAAT,EAjBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAT;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAoBeb,M","file":"getApp.js","sourcesContent":["const fetch = require('isomorphic-fetch')\nconst platformConfig = require('../config')\nconst currentVersion = require('../../package.json').version\n\nconst getApp = async (data) => {\n  const response = await fetch(\n    `${platformConfig.backendUrl}tenants/${data.tenant}/applications/${data.app}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-platform-version': currentVersion,\n        Authorization: `bearer ${data.token}`\n      }\n    }\n  )\n\n  if (!response.ok) {\n    const text = await response.text()\n    throw new Error(text)\n  }\n  return response.json()\n}\n\nexport default getApp\n"]}