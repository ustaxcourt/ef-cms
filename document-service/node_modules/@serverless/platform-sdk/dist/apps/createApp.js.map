{"version":3,"sources":["../../src/apps/createApp.js"],"names":["fetch","require","platformConfig","currentVersion","version","slugifyApp","text","toString","toLowerCase","replace","createApp","data","body","JSON","stringify","tenantName","tenant","appName","app","title","backendUrl","method","headers","Authorization","token","response","ok","Error","json"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,WAAR,CAAvB;AACA,IAAME,iBAAiBF,QAAQ,oBAAR,EAA8BG,OAArD;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD;AAAA,SACjBA,KACGC,QADH,GAEGC,WAFH,GAGGC,OAHH,CAGW,aAHX,EAG0B,GAH1B,EAG+B;AAH/B,GAIGA,OAJH,CAIW,KAJX,EAIkB,EAJlB,EAIsB;AAJtB,GAKGA,OALH,CAKW,KALX,EAKkB,EALlB,CADiB;AAAA,CAAnB,C,CAMwB;;AAExB,IAAMC;AAAA,qEAAY,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,gBADU,GACHC,KAAKC,SAAL,CAAe;AAC1BC,0BAAYJ,KAAKK,MADS;AAE1BC,uBAASZ,WAAWM,KAAKO,GAAhB,CAFiB;AAG1BC,qBAAOR,KAAKO;AAHc,aAAf,CADG;AAAA;AAAA,mBAMOlB,MAAO,GAAEE,eAAekB,UAAW,WAAUT,KAAKK,MAAO,eAAzD,EAAyE;AAC9FK,sBAAQ,MADsF;AAE9FT,kBAF8F;AAG9FU,uBAAS;AACP,gCAAgB,kBADT;AAEP,sCAAsBnB,cAFf;AAGPoB,+BAAgB,UAASZ,KAAKa,KAAM;AAH7B;AAHqF,aAAzE,CANP;;AAAA;AAMVC,oBANU;;AAAA,gBAgBXA,SAASC,EAhBE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiBKD,SAASnB,IAAT,EAjBL;;AAAA;AAiBRA,gBAjBQ;AAAA,kBAkBR,IAAIqB,KAAJ,CAAUrB,IAAV,CAlBQ;;AAAA;AAAA,6CAoBTmB,SAASG,IAAT,EApBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAuBelB,S","file":"createApp.js","sourcesContent":["const fetch = require('isomorphic-fetch')\nconst platformConfig = require('../config')\nconst currentVersion = require('../../package.json').version\n\nconst slugifyApp = (text) =>\n  text\n    .toString()\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-') // Replace any run of disallowed chars with a hyphen\n    .replace(/^-+/, '') // remove leading hyphens\n    .replace(/-+$/, '') // remove trailing hyphens\n\nconst createApp = async (data) => {\n  const body = JSON.stringify({\n    tenantName: data.tenant,\n    appName: slugifyApp(data.app),\n    title: data.app\n  })\n  const response = await fetch(`${platformConfig.backendUrl}tenants/${data.tenant}/applications`, {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n      'x-platform-version': currentVersion,\n      Authorization: `bearer ${data.token}`\n    }\n  })\n\n  if (!response.ok) {\n    const text = await response.text()\n    throw new Error(text)\n  }\n  return response.json()\n}\n\nexport default createApp\n"]}