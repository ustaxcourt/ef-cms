{"version":3,"sources":["../../src/login/openBrowser.js"],"names":["opn","require","chalk","isDockerContainer","displayManualOpenMessage","url","err","console","log","errMsg","message","msg","red","green","yellow","module","exports","openBrowser","browser","process","env","BROWSER","platform","undefined","options","wait","app","catch"],"mappings":";;AAAA;;AAEA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,IAAME,oBAAoBF,QAAQ,WAAR,CAA1B;;AAEA,SAASG,wBAAT,CAAkCC,GAAlC,EAAuCC,GAAvC,EAA4C;AAC1C;AACAC,UAAQC,GAAR,CAAY,6BAAZ;AACA,MAAMC,SAASH,MAAO,YAAWA,IAAII,OAAQ,EAA9B,GAAkC,EAAjD;AACA,MAAMC,MAAO,uCAAsCF,MAAO,EAA1D;AACAF,UAAQC,GAAR,CAAa,OAAMN,MAAMU,GAAN,CAAUD,GAAV,CAAe,EAAlC;AACAJ,UAAQC,GAAR,CAAYN,MAAMW,KAAN,CAAY,yDAAZ,CAAZ;AACAN,UAAQC,GAAR,CAAYN,MAAMY,MAAN,CAAaT,GAAb,CAAZ;AACAE,UAAQC,GAAR,CAAY,6BAAZ;AACA,SAAO,KAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBZ,GAArB,EAA0B;AACzC,MAAIa,UAAUC,QAAQC,GAAR,CAAYC,OAA1B;AACA,MAAIH,YAAY,MAAZ,IAAsBf,mBAA1B,EAA+C;AAC7C,WAAOC,yBAAyBC,GAAzB,CAAP;AACD;AACD,MAAIc,QAAQG,QAAR,KAAqB,QAArB,IAAiCJ,YAAY,MAAjD,EAAyD;AACvDA,cAAUK,SAAV;AACD;AACD,MAAMC,UAAU,EAAEC,MAAM,KAAR,EAAeC,KAAKR,OAApB,EAAhB;AACA,SAAOlB,IAAIK,GAAJ,EAASmB,OAAT,EAAkBG,KAAlB,CAAwB,UAACrB,GAAD;AAAA,WAASF,yBAAyBC,GAAzB,EAA8BC,GAA9B,CAAT;AAAA,GAAxB,CAAP;AACD,CAVD","file":"openBrowser.js","sourcesContent":["/* eslint-disable no-console */\n\nconst opn = require('opn')\nconst chalk = require('chalk')\nconst isDockerContainer = require('is-docker')\n\nfunction displayManualOpenMessage(url, err) {\n  // https://github.com/sindresorhus/log-symbols\n  console.log('---------------------------')\n  const errMsg = err ? `\\nError: ${err.message}` : ''\n  const msg = `Unable to open browser automatically${errMsg}`\n  console.log(`ğŸ™ˆ  ${chalk.red(msg)}`)\n  console.log(chalk.green('Please open your browser & open the URL below to login:'))\n  console.log(chalk.yellow(url))\n  console.log('---------------------------')\n  return false\n}\n\nmodule.exports = function openBrowser(url) {\n  let browser = process.env.BROWSER\n  if (browser === 'none' || isDockerContainer()) {\n    return displayManualOpenMessage(url)\n  }\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined\n  }\n  const options = { wait: false, app: browser }\n  return opn(url, options).catch((err) => displayManualOpenMessage(url, err))\n}\n"]}