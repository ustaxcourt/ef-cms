{"version":3,"sources":["../../src/service/archiveService.js"],"names":["fetch","require","platformConfig","currentVersion","version","archiveService","data","body","provider","region","backendUrl","tenant","app","name","method","JSON","stringify","headers","Authorization","accessKey","response","ok","text","Error","json"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,WAAR,CAAvB;AACA,IAAME,iBAAiBF,QAAQ,oBAAR,EAA8BG,OAArD;;AAEA,IAAMC;AAAA,qEAAiB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,gBADe,GACR;AACXC,wBAAUF,KAAKE,QADJ;AAEXC,sBAAQH,KAAKG;AAFF,aADQ;AAAA;AAAA,mBAKET,MACpB,GAAEE,eAAeQ,UAAW,WAAUJ,KAAKK,MAAO,iBAAgBL,KAAKM,GAAI,aAC1EN,KAAKO,IACN,EAHoB,EAIrB;AACEC,sBAAQ,KADV;AAEEP,oBAAMQ,KAAKC,SAAL,CAAeT,IAAf,CAFR;AAGEU,uBAAS;AACP,gCAAgB,kBADT;AAEP,sCAAsBd,cAFf;AAGPe,+BAAgB,UAASZ,KAAKa,SAAU;AAHjC;AAHX,aAJqB,CALF;;AAAA;AAKfC,oBALe;;AAAA,gBAoBhBA,SAASC,EApBO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAqBAD,SAASE,IAAT,EArBA;;AAAA;AAqBbA,gBArBa;AAAA,kBAsBb,IAAIC,KAAJ,CAAUD,IAAV,CAtBa;;AAAA;AAAA,6CAwBdF,SAASI,IAAT,EAxBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBA2BenB,c","file":"archiveService.js","sourcesContent":["const fetch = require('isomorphic-fetch')\nconst platformConfig = require('../config')\nconst currentVersion = require('../../package.json').version\n\nconst archiveService = async (data) => {\n  const body = {\n    provider: data.provider,\n    region: data.region\n  }\n  const response = await fetch(\n    `${platformConfig.backendUrl}tenants/${data.tenant}/applications/${data.app}/services/${\n      data.name\n    }`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n        'x-platform-version': currentVersion,\n        Authorization: `bearer ${data.accessKey}`\n      }\n    }\n  )\n\n  if (!response.ok) {\n    const text = await response.text()\n    throw new Error(text)\n  }\n  return response.json()\n}\n\nexport default archiveService\n"]}