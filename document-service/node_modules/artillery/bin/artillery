#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

'use strict';

const debug = require('debug')('artillery:cli');
const updateNotifier = require('update-notifier');
const program = require('commander');
const pkg = require('../package.json');
const version = pkg.version;
const chalk = require('chalk');
const tryResolve = require('try-require').resolve;

const commands = require('../lib/commands');

const notifier = updateNotifier({ pkg, updateCheckInterval: 1000 * 60 * 60 * 24 });

if (notifier.update) {
  notifier.notify({
    message: `ðŸ‘‹ Good news! An update is available! (${chalk.yellow('v' + version)} â†’ ${chalk.green('v' + notifier.update.latest)})\nRun ${chalk.green('npm install -g artillery@latest')} to upgrade`
  });
}

let pro = null;
if (tryResolve('artillery-pro')) {
  pro = require('artillery-pro');
} else {
  debug('Artillery Pro is not installed');
}

program.version(version);

Object.keys(commands).forEach(function(name) {
  if (commands[name].getConfig) {
    let config = commands[name].getConfig();
    let command = program.command(config.command);
    command.description(config.description);
    config.options.forEach(function(option) {
      command.option(option[0], option[1]);
    });
    command.action(commands[name]);
  }
});

if (pro) {
  pro.init(program);
}

program.parse(process.argv);

if (!process.argv.slice(2).length) {
  program.help();
}
