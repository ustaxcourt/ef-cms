name: Create an intermediate branch to test

on:
  pull_request:
    branches: [test]
    type:
      - opened

permissions:
  pull-requests: write
  contents: write

jobs:
  create-intermediate-branch:
    runs-on: ubuntu-latest
    outputs:
      pr_link: ${{ steps.get_pr_link.outputs.pr_link }}
    steps:
      - name: Check out the head repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          fetch-depth: '0'

      - name: Set Git config
        run: |
          git config --local user.email "michael.marcotte@ustaxcourt.gov"
          git config --local user.name "Mike Marcotte"

      - name: Check out the base repo
        uses: actions/checkout@v3
        with:
          ref: 'test'
          fetch-depth: '0'

      - name: Create and save a copy of feature branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          feature_branch_copy="${{ github.head_ref }}-copy"

          git checkout -b $feature_branch_copy

      - name: LOG BRANCHES
        run: |
          echo "feature branch, ${{ github.head_ref }}"
          echo "REGULAR REPO, ${{ github.repository }}"
          echo "PULL REQUEST EVENT INFO, ${{ toJSON(github.event) }}"

      - name: Create Intermediate branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          destination_branch=${{ github.base_ref }}
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-test"
          head_repo=${{ github.event.pull_request.head.repo.clone_url }}
          feature_branch_copy="${{ github.head_ref }}-copy"

          # git remote add head_remote $head_repo

          # Create a copy of the destination branch
          git checkout -b $intermediate_branch

          # Merge the feature branch into the intermediate branch
          # git pull --strategy ort --no-rebase origin $feature_branch_copy
          git merge $feature_branch_copy

          # create a commit with unresolved merge conflicts
          if [[ -n $(git status --porcelain | grep '^UU') ]]; then
            git add .
            git commit -m "${feature_branch}: MERGE CONFLICTS: PLEASE RESOLVE!" --no-verify
          fi

          # Push the new intermediate to remote
          git push -u origin "${intermediate_branch}"

      - name: Check if PR should be created
        id: pr_check
        run: |
          destination_branch=${{ github.base_ref }}
          intermediate_branch="${{ github.head_ref }}-intermediate-to-test"
          head_repo=${{ github.event.pull_request.head.repo.clone_url }}

          diff_of_branch=$(git diff $destination_branch $intermediate_branch)

          if [[ -n "${diff_of_branch}" ]]
          then
            echo "create-int-pr-flag=true" >> "$GITHUB_OUTPUT"
          else
            echo "create-int-pr-flag=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Make PR of Intermediate branch to test
        if: steps.pr_check.outputs.create-int-pr-flag == 'true'
        id: get_pr_link
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          destination_branch=${{ github.base_ref }}
          feature_branch=${{ github.head_ref }}
          pr_title="${feature_branch} Intermediate To test"

          sudo apt-get update
          sudo apt-get install hub

          PR_LINK=$(hub pull-request -b $destination_branch -m "$pr_title" -l "to $destination_branch")

          echo "pr_link=$PR_LINK" >> "$GITHUB_OUTPUT"

      - name: Close PR with comment
        if: steps.pr_check.outputs.create-int-pr-flag == 'true'
        uses: peter-evans/close-pull@v2
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: "Auto Closing this PR. An intermediate branch has been created. Here's the link: ${{ steps.get_pr_link.outputs.pr_link }}."
