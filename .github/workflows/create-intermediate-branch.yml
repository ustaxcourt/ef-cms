name: Create Intermediate branch to test (if necessary)

on:
  pull_request:
    branches: [test]
    type:
      - opened

permissions:
  pull-requests: write
  contents: write

jobs:
  create-intermediate-branch:
    runs-on: ubuntu-latest
    outputs:
      pr_link: ${{ steps.get_pr_link.outputs.pr_link }}
    steps:
      - name: Check out the Court's repo
        uses: actions/checkout@v3
        with:
          ref: 'test'
          fetch-depth: '0'
      - name: Set Git config
        run: |
          git config --local user.email "michael.marcotte@ustaxcourt.gov"
          git config --local user.name "Mike Marcotte"

      - name: Create Intermediate branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-test"
          feature_branch_repo=${{ github.event.pull_request.head.repo.clone_url }}
          feature_branch_copy="${{ github.head_ref }}-copy"

          echo "CURENT BRANCH 1, $(git branch --show-current)"
          echo "REMOTE BRANCH 1, $(git remote -v)"
          echo "CURENT REPOSITORY****, ${{ github.repository }}"

          # Create a copy of test
          git checkout -b "$intermediate_branch"

          # Merge the feature branch into the intermediate branch
          git pull --strategy ort --no-rebase $feature_branch_repo $feature_branch
          # git merge --allow-unrelated-histories $feature_branch

          # create a commit with unresolved merge conflicts (if any)
          if [[ -n $(git status --porcelain | grep '^UU') ]]; then
            git add .
            git commit -m "${feature_branch}: MERGE CONFLICTS - PLEASE RESOLVE!" --no-verify
          fi

      - name: Check if PR should be created
        id: pr_check
        run: |
          intermediate_branch="${{ github.head_ref }}-intermediate-to-test"

          diff_of_branch=$(git diff test $intermediate_branch)

          echo "DIFF, $diff_of_branch"
          if [[ -n "${diff_of_branch}" ]]
          then
            echo "create-int-pr-flag=true" >> "$GITHUB_OUTPUT"
          else
            echo "create-int-pr-flag=false" >> "$GITHUB_OUTPUT"
          fi

      # - name: Make PR of Intermediate branch to test
      #   if: steps.pr_check.outputs.create-int-pr-flag == 'true'
      #   id: get_pr_link
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     feature_branch=${{ github.head_ref }}
      #     pr_title="${feature_branch} Intermediate To test"
      #     intermediate_branch="${feature_branch}-intermediate-to-test"

      #     sudo apt-get update
      #     sudo apt-get install hub

      #     PR_LINK=$(hub pull-request -b test -h $intermediate_branch -m "$pr_title" -l "to test")

      #     echo "pr_link=$PR_LINK" >> "$GITHUB_OUTPUT"

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          title: '[INTERMEDIATE BRANCH CREATED]'
          branch: '${{ github.head_ref }}-intermediate-to-test'
          branch-suffix: timestamp
          labels: 'to test'
          body: |
            Intermediate branch created!
            - Updated with latest from test branch upon feature branch merge
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request

      # - name: Close PR with comment
      #   if: steps.pr_check.outputs.create-int-pr-flag == 'true'
      #   uses: peter-evans/close-pull@v2
      #   with:
      #     pull-request-number: ${{ github.event.pull_request.number }}
      #     comment: "Auto Closing this PR. An intermediate branch has been created. Here's the link: ${{ steps.get_pr_link.outputs.pr_link }}."
