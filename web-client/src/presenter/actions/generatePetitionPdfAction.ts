import { FORMATS } from '@shared/business/utilities/DateHandler';
import { PETITION_TYPES } from '@web-client/presenter/actions/setupPetitionStateAction';
import { state } from '@web-client/presenter/app.cerebral';

export const generatePetitionPdfAction = async ({
  applicationContext,
  get,
  store,
}: ActionProps) => {
  const petition = get(state.petitionFormatted);
  const isDraft = get(state.stepIndicatorInfo.currentStep) == 5;

  const { petitionType } = petition;

  if (petitionType === PETITION_TYPES.autoGenerated) {
    const { fileId, url } = await applicationContext
      .getUseCases()
      .generatePetitionPdfInteractor(applicationContext, {
        ...petition,
        isDraft,
        // do this in interactor
        noticeIssuedDate: applicationContext
          .getUtilities()
          .formatDateString(petition.noticeIssuedDate || '', FORMATS.MMDDYY),
      });

    if (!isDraft) {
      store.set(state.petitionFormatted.petitionFileId, fileId);
    }

    return { pdfUrl: url };
  }
};
