{
  "name": "ef-cms",
  "description": "US Tax Court Management System",
  "version": "0.1.0",
  "license": "CC0-1.0",
  "repository": "https://github.com/ustaxcourt/ef-cms",
  "engines": {
    "node": ">=20.14.0 <21.0.0",
    "npm": ">=10.2.4 <11.0.0"
  },
  "dependencies": {
    "@18f/us-federal-holidays": "4.0.0",
    "@aws-crypto/sha256-browser": "5.2.0",
    "@aws-sdk/client-api-gateway": "3.624.0",
    "@aws-sdk/client-apigatewaymanagementapi": "3.624.0",
    "@aws-sdk/client-apigatewayv2": "3.624.0",
    "@aws-sdk/client-cloudfront": "3.624.0",
    "@aws-sdk/client-cloudwatch": "3.624.0",
    "@aws-sdk/client-cloudwatch-logs": "3.624.0",
    "@aws-sdk/client-cognito-identity-provider": "3.628.0",
    "@aws-sdk/client-dynamodb": "3.624.0",
    "@aws-sdk/client-dynamodb-streams": "3.624.0",
    "@aws-sdk/client-glue": "3.627.0",
    "@aws-sdk/client-lambda": "3.624.0",
    "@aws-sdk/client-opensearch": "3.624.0",
    "@aws-sdk/client-route-53": "3.624.0",
    "@aws-sdk/client-s3": "3.627.0",
    "@aws-sdk/client-ses": "3.624.0",
    "@aws-sdk/client-sns": "3.624.0",
    "@aws-sdk/client-sqs": "3.624.0",
    "@aws-sdk/client-ssm": "3.624.0",
    "@aws-sdk/cloudfront-signer": "3.621.0",
    "@aws-sdk/credential-provider-node": "3.624.0",
    "@aws-sdk/lib-dynamodb": "3.624.0",
    "@aws-sdk/lib-storage": "3.627.0",
    "@aws-sdk/node-http-handler": "3.374.0",
    "@aws-sdk/protocol-http": "3.374.0",
    "@aws-sdk/s3-presigned-post": "3.627.0",
    "@aws-sdk/s3-request-presigner": "3.627.0",
    "@aws-sdk/signature-v4": "3.374.0",
    "@aws-sdk/util-dynamodb": "3.624.0",
    "@cerebral/react": "4.2.1",
    "@fortawesome/fontawesome-svg-core": "1.2.36",
    "@fortawesome/free-regular-svg-icons": "5.15.4",
    "@fortawesome/free-solid-svg-icons": "5.15.4",
    "@fortawesome/react-fontawesome": "0.2.2",
    "@joi/date": "2.1.1",
    "@opensearch-project/opensearch": "2.11.0",
    "@sparticuz/chromium": "123.0.1",
    "@uswds/uswds": "3.7.1",
    "aws-lambda": "1.0.7",
    "aws-xray-sdk": "3.9.0",
    "axios": "1.7.3",
    "broadcast-channel": "7.0.0",
    "canvas": "2.11.2",
    "cerebral": "5.2.1",
    "classnames": "2.5.1",
    "cookie": "0.6.0",
    "core-js": "3.38.0",
    "cors": "2.8.5",
    "csv-stringify": "6.5.1",
    "deep-freeze": "0.0.1",
    "diff-arrays-of-objects": "1.1.9",
    "english-ordinals": "3.3.0",
    "export-to-csv": "1.3.0",
    "express": "4.19.2",
    "fflate": "0.8.2",
    "form-data": "4.0.0",
    "image-blob-reduce": "4.1.0",
    "joi": "17.13.3",
    "jsonwebtoken": "9.0.2",
    "lodash": "4.17.21",
    "logform": "2.6.1",
    "luxon": "3.5.0",
    "moize": "6.1.6",
    "parse-full-name": "1.2.6",
    "pdf-lib": "1.17.1",
    "pdfjs-dist": "2.16.105",
    "process": "0.11.10",
    "promise-retry": "2.0.1",
    "pug": "3.0.3",
    "qs": "6.13.0",
    "quill-delta-to-html": "0.12.1",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-idle-timer": "5.7.2",
    "react-number-format": "5.4.0",
    "react-paginate": "8.2.0",
    "react-quill": "2.0.0",
    "react-responsive": "10.0.0",
    "react-select": "5.8.0",
    "riot-route": "3.1.4",
    "sanitize-filename": "1.6.3",
    "servor": "4.0.2",
    "supports-color": "9.4.0",
    "tmp": "0.2.3",
    "util": "0.12.5",
    "uuid": "10.0.0",
    "websocket": "1.0.35",
    "wicg-inert": "3.1.2",
    "winston": "3.14.1"
  },
  "scripts": {
    "admin:become-user": "npx ts-node --transpile-only scripts/user/become-user.ts",
    "admin:create-user": "npx ts-node --transpile-only scripts/user/add-user.ts",
    "admin:download-case-documents": "npx ts-node --transpile-only scripts/download-all-case-documents.ts",
    "admin:lookup-user": "npx ts-node --transpile-only scripts/user/lookup-user.ts",
    "admin:resend-service-email-to-irs-superuser": "npx ts-node --transpile-only scripts/email/resend-service-email-to-irs-superuser.ts",
    "backup:dynamo-table": "./scripts/dynamo/backup-dynamo-table.sh",
    "build:all": "npm run clean && npm run build:assets && npm run build:client",
    "build:assets": "node shared/createModule.js",
    "build:client": "NODE_ENV=production USTC_ENV=prod PUBLIC_SITE_URL=$PUBLIC_SITE_URL node esbuild.config.mjs",
    "build:public": "USTC_ENV=prod PUBLIC_SITE_URL=$PUBLIC_SITE_URL node esbuild.public.config.mjs",
    "clean:public": "rm -rf dist-public/",
    "clean": "./reset-dependencies.sh CLEAN_ONLY",
    "cypress:integration": "./scripts/run-cypress.sh",
    "cypress:integration:file": "./scripts/run-cypress.sh -t",
    "cypress:integration:open": "./scripts/run-cypress.sh -o",
    "cypress:integration:public": "./scripts/run-cypress.sh -p",
    "cypress:integration:public:open": "./scripts/run-cypress.sh -po",
    "cypress:readonly:open": "./scripts/run-cypress.sh -ro",
    "cypress:readonly:public:open": "./scripts/run-cypress.sh -rpo",
    "cypress:readonly:public:open:local": "./scripts/run-cypress.sh -rpol",
    "cypress:readonly:public": "./scripts/run-cypress.sh -rp",
    "cypress:readonly": "./scripts/run-cypress.sh -r",
    "cypress:smoketests:local:file": "./scripts/run-cypress.sh -sl -t",
    "cypress:smoketests:local": "./scripts/run-cypress.sh -sl",
    "cypress:smoketests:open:local": "./scripts/run-cypress.sh -sol",
    "cypress:smoketests:open": "./scripts/run-cypress.sh -sco",
    "cypress:smoketests": "./scripts/run-cypress.sh -s",
    "delete:api-gateway-mappings": "./scripts/delete-api-gateway-mappings.sh",
    "delete:dynamo-table": "./scripts/dynamo/delete-dynamo-table.sh",
    "delete:elasticsearch-cluster": "./scripts/elasticsearch/delete-elasticsearch-cluster.sh",
    "deploy:account-specific": "cd web-api/terraform/applyables/account-specific && ../../bin/deploy-account-specific.sh",
    "deploy:allColors": "cd web-api/terraform/applyables/allColors && ../../bin/deploy-app-all-colors.sh",
    "deploy:blue": "cd web-api/terraform/applyables/blue && COLOR=blue ../../bin/deploy-app-color.sh",
    "deploy:green": "cd web-api/terraform/applyables/green && COLOR=green ../../bin/deploy-app-color.sh",
    "deploy:ci-image": "./docker-to-ecr.sh",
    "deploy:glue-cron": "cd web-api/terraform/applyables/glue-cron && ../../bin/deploy-glue-cron.sh",
    "deploy:migration": "cd web-api/terraform/applyables/migration && ../../bin/deploy-migration.sh",
    "deploy:migration-cron": "cd web-api/terraform/applyables/migration-cron && ../../bin/deploy-migration-cron.sh",
    "deploy:public-ui:files": "./web-client/deploy-public.sh",
    "deploy:reindex-cron": "cd web-api/terraform/applyables/reindex-cron && ../../bin/deploy-reindex-cron.sh",
    "deploy:switch-colors-cron": "cd web-api/terraform/applyables/switch-colors-cron && ../../bin/deploy-switch-colors-cron.sh",
    "deploy:ui:files": "./web-client/deploy-ui.sh",
    "deploy:wait-for-workflow-cron": "cd web-api/terraform/applyables/wait-for-workflow && ../../bin/deploy-wait-for-workflow-cron.sh",
    "destroy:api": "cd web-api/terraform/main && ../bin/destroy-app.sh",
    "destroy:client": "cd web-client/terraform/main && ../bin/destroy-app.sh",
    "destroy:env": "npx ts-node --transpile-only env-destroy-utils/destroyEnvironment.ts",
    "destroy:glue-cron": "cd web-api/terraform/applyables/glue-cron && ../../bin/destroy-glue-cron.sh",
    "destroy:migration": "cd web-api/terraform/applyables/migration && ../../bin/destroy-migration.sh",
    "destroy:migration-cron": "cd web-api/terraform/applyables/migration-cron && ../../bin/destroy-migration-cron.sh",
    "destroy:reindex-cron": "cd web-api/terraform/applyables/reindex-cron && ../../bin/destroy-reindex-cron.sh",
    "destroy:switch-colors-cron": "cd web-api/terraform/applyables/switch-colors-cron && ../../bin/destroy-switch-colors-cron.sh",
    "destroy:wait-for-workflow-cron": "cd web-api/terraform/applyables/wait-for-workflow && ../../bin/destroy-wait-for-workflow-cron.sh",
    "docs": "npx docsify-cli serve ./docs",
    "dynamo:admin": "AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER DYNAMO_ENDPOINT=http://localhost:8000 dynamodb-admin",
    "dynamo:export": "AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER npx ts-node --transpile-only web-api/dynamo-export.ts > ./web-api/storage/fixtures/efcms-export.json",
    "dynamo:import": "npx ts-node --transpile-only ./web-api/create-dynamo-tables.ts && AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER npx ts-node --transpile-only ./web-api/seed-dynamo.ts ./storage/fixtures/efcms-export.json",
    "init:api": "cd web-api/terraform/main && ../bin/deploy-init.sh",
    "init:ui": "cd web-client/terraform/main && ../bin/deploy-init.sh",
    "lint:css:fix": "npm run lint:css -- --fix",
    "lint:css": "stylelint web-client/src/**/*.scss",
    "lint:file": "TIMING=1 eslint --",
    "esbuild:build": "node esbuild.config.mjs",
    "esbuild:start": "node esbuild.config.mjs -w",
    "git:pr-to-test": "./scripts/pr-to-test.sh",
    "lint:fix": "run-p lint:css:fix lint:js/ts:fix",
    "lint:js/ts:fix:plain": "npm run lint:js/ts:fix -- --rule 'prettier/prettier: 0'",
    "lint:js/ts:fix": "npm run lint:js/ts -- --fix",
    "lint:js/ts": "TIMING=1 eslint --ext .js,.jsx,.ts,.tsx shared/src/ web-api/storage/ web-api/src/ web-client/src/ web-client/integration-tests/ web-client/integration-tests-public/",
    "lint:swagger": "swagger-cli validate web-api/swagger.json && swagger-cli validate docs/api/v1.yaml && swagger-cli validate docs/api/v2.yaml",
    "lint": "run-p lint:swagger lint:css lint:js/ts",
    "loadtest:pdf-generation": "npx ts-node --transpile-only ./web-api/storage/scripts/loadTest/loadTestPdfGeneration.ts",
    "maintenance:disengage": "ts-node ./scripts/dynamo/set-maintenance-mode.ts false",
    "maintenance:engage": "ts-node ./scripts/dynamo/set-maintenance-mode.ts true",
    "maintenance:disengage:local": ". ./setup-local-env.sh && npx ts-node --transpile-only scripts/set-maintenance-mode-locally.ts false",
    "maintenance:engage:local": ". ./setup-local-env.sh && npx ts-node --transpile-only scripts/set-maintenance-mode-locally.ts true",
    "migrate:local": "AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SOURCE_TABLE=efcms-local DESTINATION_TABLE=efcms-local-1 ts-node --transpile-only ./web-api/run-local-migration.ts",
    "migration:cleanup": "./scripts/migration/update-deploy-table-after-migration.sh",
    "pending-color-switch": "./web-client/pending-color-switch.sh",
    "postinstall": "husky install",
    "print:success": "echo 'Build successful. You can access the site at http://localhost:1234'",
    "reindex:elasticsearch": "./reindex-elasticsearch.sh",
    "report:event-codes-by-year": "npx ts-node --transpile-only scripts/reports/event-codes-by-year.ts",
    "report:petition-counts": "npx ts-node --transpile-only scripts/reports/petition-counts.ts",
    "report:trial-sessions-by-fiscal-year": "npx ts-node --transpile-only scripts/reports/trial-sessions-by-fiscal-year.ts",
    "report:trial-sessions-by-year": "npx ts-node --transpile-only scripts/reports/trial-sessions-by-calendar-year.ts",
    "reset-cases": "./clear-env.sh",
    "secrets:rotate-circleci": "scripts/user/rotate-circleci-secrets.sh",
    "secrets:rotate-environment": "npx ts-node --transpile-only scripts/user/rotate-environment-secrets.ts",
    "seed:db": "npx ts-node --transpile-only ./web-api/create-dynamo-tables.ts && npx ts-node --transpile-only ./web-api/seed-dynamo.ts",
    "seed:elasticsearch": "./web-api/seed-elasticsearch.sh",
    "seed:s3": "cp -R ./web-api/storage/fixtures/s3/* ./web-api/storage/s3",
    "seed": "run-p seed:db seed:s3",
    "shell": "docker-compose run -it shell /bin/bash",
    "start:all:ci": "run-p start:api:ci start:client:ci start:public:ci",
    "start:all:docker": "docker build -t efcms -f Dockerfile-local . && docker-compose up",
    "start:api:ci": "CI=true npm run start:api",
    "start:api:resume": "RESUME=true npm run start:api",
    "start:api": "USTC_ENV=dev ./run-local.sh",
    "start:api:docker": "USTC_ENV=dev ./run-api.sh",
    "start:client:ci": "CI=true NODE_ENV=production npm run start:client",
    "start:client:no-scanner": "NO_SCANNER=true npm run start:client",
    "start:client": "npm run start:client-host && WATCH=true FILE_UPLOAD_MODAL_TIMEOUT=1 USTC_ENV=dev ENV=local npm run start:client:esbuild",
    "start:client-host": "servor dist index.html 1234 &",
    "start:client:esbuild": "node esbuild.config.mjs",
    "start:madge": "node ./graph-generators/index.js",
    "start:migration": "npx ts-node --transpile-only web-api/send-migration-segment-messages.ts",
    "start:public:ci": "npm run clean:public && CI=true npm run start:public",
    "start:public-host": "servor dist-public index.html 5678 &",
    "start:public": "npm run start:public-host && CHECK_DEPLOY_DATE_INTERVAL=5000 WATCH=true USTC_ENV=dev ENV=local node esbuild.public.config.mjs",
    "start:s3rver": "s3rver -d web-api/storage/s3 -a 0.0.0.0 -p 9001 --configure-bucket noop-documents-local-us-east-1 web-api/cors-policy.xml --configure-bucket noop-temp-documents-local-us-east-1 web-api/cors-policy.xml",
    "switch-colors": "./web-client/switch-colors.sh",
    "test:_client:parallel": "NO_SCANNER=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --maxWorkers=50% --config web-client/jest-unit.config.ts",
    "test:_client": "NO_SCANNER=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --runInBand --config web-client/jest.config.ts",
    "test:api": "npm run build:assets && jest --config web-api/jest-unit.config.ts",
    "test:api:hosted-environment": "jest --config web-api/hostedEnvironmentTests/jest-hosted-environment.ts",
    "test:api:file": "npm run build:assets && jest --config web-api/jest-unit.config.ts --coverage=false",
    "test:client:_integration": "NO_SCANNER=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER jest --runInBand --config web-client/jest-integration.config.ts",
    "test:client:integration:ci": "npm run test:client:_integration -- --coverageDirectory=./coverage-integration-${CIRCLE_NODE_INDEX} ${TESTFILES}",
    "test:client:unit": "jest --config web-client/jest-unit.config.ts --testMatch '**/web-client/src/**/?(*.)+(spec|test).[jt]s?(x)'",
    "test:client:unit:file": "jest --config web-client/jest-unit.config.ts --testMatch '**/web-client/src/**/?(*.)+(spec|test).[jt]s?(x)' --coverage=false",
    "test:client:unit:ci": "jest --config web-client/jest-unit.config.ts --coverageDirectory=./coverage/${NODE_INDEX} ${TESTFILES}",
    "test:scripts": "jest --config scripts/jest-scripts.config.ts",
    "test:file": "CI=false NO_SCANNER=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --config web-client/jest-integration.config.ts -- ",
    "test:performance": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/private-app-report.json ./artillery/private-app.yml",
    "test:performance:messages": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/read-messages-report.json ./artillery/read-messages.yml && artillery report ./artillery/read-messages-report.json",
    "test:performance:document-qc": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/read-qc-section-messages.json ./artillery/read-qc-section-messages.yml && artillery report ./artillery/read-qc-section-messages.json",
    "test:performance:order": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/private-advanced-order.json ./artillery/private-advanced-order.yml",
    "test:document-generation": "npm run build:assets && jest --config shared/src/business/utilities/documentGenerators/document_generator.jest.config.ts",
    "test:shared": "npm run build:assets && jest --config shared/jest-shared.config.ts",
    "test:shared:ci": "npm run build:assets && jest --config shared/jest-shared.config.ts --coverageDirectory=./coverage/${NODE_INDEX} ${TESTFILES}",
    "test:shared:file": "npm run build:assets && jest --config shared/jest-shared.config.ts --coverage=false",
    "test:watch": "jest --watch .*test\\.js$",
    "verify-authorizers": "./scripts/circleci/verify-authorizers.sh",
    "verify-private-elasticsearch": "./scripts/circleci/verify-private-elasticsearch.sh",
    "visualize-bundle": "esbuild-visualizer --metadata ./metadata.json && open stats.html"
  },
  "overrides": {
    "axios": "$axios",
    "jsonwebtoken": "$jsonwebtoken",
    "semver": "7.5.4",
    "ejs": "3.1.10"
  },
  "devDependencies": {
    "@aws-sdk/client-iam": "3.624.0",
    "@aws-sdk/client-secrets-manager": "3.624.0",
    "@babel/cli": "7.24.8",
    "@babel/core": "7.25.2",
    "@babel/eslint-parser": "7.25.1",
    "@babel/preset-env": "7.25.3",
    "@babel/preset-react": "7.24.7",
    "@babel/preset-typescript": "7.24.7",
    "@babel/register": "7.24.6",
    "@cypress/puppeteer": "^0.1.5",
    "@faker-js/faker": "8.4.1",
    "@miovision/eslint-plugin-disallow-date": "2.0.0",
    "@types/aws-lambda": "8.10.143",
    "@types/jest": "29.5.12",
    "@types/lodash": "4.17.7",
    "@types/luxon": "3.4.2",
    "@types/node": "22.1.0",
    "@types/promise-retry": "1.1.6",
    "@types/react": "18.3.3",
    "@types/react-dom": "18.3.0",
    "@types/react-paginate": "7.1.4",
    "@types/uuid": "10.0.0",
    "@types/websocket": "1.0.10",
    "@typescript-eslint/eslint-plugin": "8.0.1",
    "@typescript-eslint/parser": "8.0.1",
    "@vendia/serverless-express": "4.12.6",
    "ajv": "8.17.1",
    "artillery": "2.0.19",
    "artillery-plugin-metrics-by-endpoint": "1.13.0",
    "autoprefixer": "10.4.20",
    "aws-sdk-client-mock": "4.0.1",
    "axe-core": "4.10.0",
    "axios-retry": "4.5.0",
    "babel-jest": "29.7.0",
    "babel-loader": "9.1.3",
    "babel-plugin-cerebral": "1.0.1",
    "babel-plugin-transform-html-import-require-to-string": "0.0.3",
    "checksum": "1.0.0",
    "cognito-local": "3.23.3",
    "crypto-browserify": "3.12.0",
    "css-loader": "7.1.2",
    "csv-parse": "5.5.6",
    "cypress": "13.13.2",
    "cypress-axe": "1.5.0",
    "cypress-file-upload": "5.0.8",
    "decimal.js": "10.4.3",
    "dynamodb-admin": "4.6.1",
    "dynamodb-streams-readable": "3.0.0",
    "esbuild": "0.23.0",
    "esbuild-css-modules-plugin": "3.1.2",
    "esbuild-plugin-babel-cached": "0.2.3",
    "esbuild-plugin-clean": "1.0.1",
    "esbuild-plugin-copy": "2.1.1",
    "esbuild-plugin-resolve": "2.0.0",
    "esbuild-plugin-svg": "0.1.0",
    "esbuild-sass-plugin": "3.3.1",
    "esbuild-serve": "1.0.1",
    "esbuild-visualizer": "0.6.0",
    "eslint": "8.57.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-cypress": "3.4.0",
    "eslint-plugin-import": "2.29.1",
    "eslint-plugin-jest": "28.8.0",
    "eslint-plugin-jsx-a11y": "6.9.0",
    "eslint-plugin-prettier": "5.2.1",
    "eslint-plugin-promise": "7.1.0",
    "eslint-plugin-react": "7.35.0",
    "eslint-plugin-security": "3.0.1",
    "eslint-plugin-sort-destructure-keys": "2.0.0",
    "eslint-plugin-sort-imports-es6-autofix": "0.6.0",
    "eslint-plugin-sort-keys-fix": "1.1.2",
    "eslint-plugin-sort-requires-fix": "2.1.2",
    "eslint-plugin-spellcheck": "0.0.20",
    "esm": "3.2.25",
    "file-loader": "6.2.0",
    "husky": "9.1.4",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-environment-node": "29.7.0",
    "jsdom": "24.1.1",
    "json2yaml": "1.1.0",
    "lint-staged": "15.2.8",
    "lint-staged-shellcheck": "0.1.2",
    "livereload": "0.9.3",
    "node-cache": "5.1.2",
    "nodemon": "3.1.4",
    "npm-run-all": "4.1.5",
    "pdf2pic": "3.1.1",
    "pixelmatch": "6.0.0",
    "pngjs": "7.0.0",
    "postcss": "8.4.41",
    "postcss-loader": "8.1.1",
    "postcss-preset-env": "10.0.0",
    "prettier": "3.3.3",
    "prop-types": "15.8.1",
    "puppeteer": "22.6.5",
    "puppeteer-core": "22.6.5",
    "react-test-renderer": "18.3.1",
    "readline": "1.3.0",
    "s3rver": "github:20minutes/s3rver",
    "sass": "1.77.8",
    "sass-loader": "16.0.0",
    "shuffle-seed": "1.1.6",
    "stream-browserify": "3.0.0",
    "style-loader": "4.0.0",
    "stylelint": "16.8.1",
    "stylelint-config-idiomatic-order": "10.0.0",
    "stylelint-config-standard": "36.0.1",
    "stylelint-config-standard-scss": "13.1.0",
    "swagger-cli": "4.0.4",
    "tiff2pdf": "1.0.2",
    "totp-generator": "1.0.0",
    "ts-jest": "29.2.4",
    "ts-loader": "9.5.1",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "5.4.5",
    "utf8": "3.0.0"
  }
}
