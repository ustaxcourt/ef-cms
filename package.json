{
  "name": "ef-cms",
  "description": "US Tax Court Management System",
  "version": "0.1.0",
  "license": "CC0-1.0",
  "repository": "https://github.com/ustaxcourt/ef-cms",
  "engines": {
    "node": ">=18.16.1 <19.0.0",
    "npm": ">=9.0.0 <10.0.0"
  },
  "dependencies": {
    "@18f/us-federal-holidays": "^4.0.0",
    "@aws-crypto/sha256-browser": "^5.2.0",
    "@aws-sdk/client-cloudwatch": "^3.465.0",
    "@aws-sdk/client-cognito-identity-provider": "^3.465.0",
    "@aws-sdk/client-dynamodb": "^3.465.0",
    "@aws-sdk/client-glue": "^3.465.0",
    "@aws-sdk/client-lambda": "^3.465.0",
    "@aws-sdk/client-opensearch": "^3.465.0",
    "@aws-sdk/client-route-53": "^3.465.0",
    "@aws-sdk/client-s3": "^3.465.0",
    "@aws-sdk/client-sqs": "^3.465.0",
    "@aws-sdk/client-ssm": "^3.465.0",
    "@aws-sdk/credential-provider-node": "^3.414.0",
    "@aws-sdk/lib-dynamodb": "^3.465.0",
    "@aws-sdk/node-http-handler": "^3.374.0",
    "@aws-sdk/protocol-http": "^3.374.0",
    "@aws-sdk/signature-v4": "^3.374.0",
    "@aws-sdk/types": "^3.413.0",
    "@aws-sdk/util-dynamodb": "^3.417.0",
    "@cerebral/react": "4.2.1",
    "@fortawesome/fontawesome-svg-core": "~1.2.36",
    "@fortawesome/free-regular-svg-icons": "^5.15.4",
    "@fortawesome/free-solid-svg-icons": "^5.15.4",
    "@fortawesome/react-fontawesome": "^0.2.0",
    "@joi/date": "^2.1.0",
    "@opensearch-project/opensearch": "^2.4.0",
    "@uswds/uswds": "3.7.1",
    "archiver": "^6.0.1",
    "aws-lambda": "^1.0.7",
    "aws-xray-sdk": "^3.5.3",
    "aws-sdk": "^2.1511.0",
    "axios": "^1.6.2",
    "broadcast-channel": "^7.0.0",
    "canvas": "^2.11.2",
    "cerebral": "5.2.1",
    "classnames": "^2.3.2",
    "cookie": "^0.6.0",
    "core-js": "^3.33.3",
    "cors": "^2.8.5",
    "csv-stringify": "^6.4.4",
    "deep-freeze": "0.0.1",
    "diff-arrays-of-objects": "^1.1.9",
    "english-ordinals": "^3.3.0",
    "esbuild": "^0.19.8",
    "esbuild-css-modules-plugin": "^3.1.0",
    "esbuild-sass-plugin": "^2.16.0",
    "express": "^4.18.2",
    "form-data": "^4.0.0",
    "image-blob-reduce": "^4.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "jwk-to-pem": "^2.0.5",
    "lodash": "^4.17.21",
    "logform": "^2.6.0",
    "luxon": "^3.4.4",
    "moize": "^6.1.6",
    "node-cache": "^5.1.2",
    "parse-full-name": "^1.2.6",
    "pdf-lib": "^1.17.1",
    "pdfjs-dist": "^2.16.105",
    "process": "^0.11.10",
    "promise-retry": "^2.0.1",
    "pug": "^3.0.2",
    "qs": "^6.11.2",
    "quill-delta-to-html": "^0.12.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-idle-timer": "^5.7.2",
    "react-number-format": "^5.3.1",
    "react-paginate": "^8.2.0",
    "react-quill": "^2.0.0",
    "react-responsive": "^9.0.2",
    "react-select": "^5.8.0",
    "riot-route": "^3.1.4",
    "s3-files": "3.0.0",
    "sanitize-filename": "^1.6.3",
    "servor": "^4.0.2",
    "supports-color": "^9.4.0",
    "tmp": "^0.2.1",
    "util": "^0.12.5",
    "uuid": "^9.0.1",
    "websocket": "^1.0.34",
    "wicg-inert": "^3.1.2",
    "winston": "^3.11.0"
  },
  "scripts": {
    "admin:create-user": "npx ts-node --transpile-only shared/admin-tools/user/add-user.ts",
    "admin:become-user": "npx ts-node --transpile-only shared/admin-tools/glue/become-user.ts",
    "admin:lookup-user": "npx ts-node --transpile-only shared/admin-tools/glue/lookup-user.js",
    "admin:resend-service-email-to-irs-superuser": "npx ts-node --transpile-only shared/admin-tools/email/resend-service-email-to-irs-superuser.js",
    "backup:dynamo-table": "./scripts/dynamo/backup-dynamo-table.sh",
    "build:all": "npm run clean && npm run build:assets && npm run build:client",
    "build:assets": "node shared/createModule.js",
    "build:client": "NODE_ENV=production USTC_ENV=prod PUBLIC_SITE_URL=$PUBLIC_SITE_URL node esbuild.config.mjs",
    "build:lambda:api": "USTC_ENV=prod npx --node-options='--max-old-space-size=8192' webpack --config webpack.config.lambda.api.ts",
    "build:lambda:glue-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.glue-cron.js",
    "build:lambda:migration": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.migration.js",
    "build:lambda:migration-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.migration-cron.js",
    "build:lambda:reindex-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.reindex-cron.js",
    "build:lambda:switch-colors-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.switch-colors-cron.js",
    "build:lambda:rotate-info-indices": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.rotate-info-indices.js",
    "build:lambda:wait-for-s3-queue-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.wait-for-s3-queue-cron.js",
    "build:lambda:wait-for-workflow-cron": "USTC_ENV=prod node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.config.lambda.wait-for-workflow.js",
    "build:public": "USTC_ENV=prod PUBLIC_SITE_URL=$PUBLIC_SITE_URL node esbuild.public.config.mjs",
    "clean:public": "rm -rf dist-public/",
    "clean": "./reset-dependencies.sh CLEAN_ONLY",
    "cypress:integration": "./scripts/run-cypress.sh",
    "cypress:integration:file": "./scripts/run-cypress.sh -t",
    "cypress:integration:open": "./scripts/run-cypress.sh -o",
    "cypress:integration:public": "./scripts/run-cypress.sh -p",
    "cypress:integration:public:open": "./scripts/run-cypress.sh -po",
    "cypress:readonly:open": "./scripts/run-cypress.sh -ro",
    "cypress:readonly:public:open": "./scripts/run-cypress.sh -rpo",
    "cypress:readonly:public:open:local": "./scripts/run-cypress.sh -rpol",
    "cypress:readonly:public": "./scripts/run-cypress.sh -rp",
    "cypress:readonly": "./scripts/run-cypress.sh -r",
    "cypress:smoketests:local:file": "./scripts/run-cypress.sh -sl -t",
    "cypress:smoketests:local": "./scripts/run-cypress.sh -sl",
    "cypress:smoketests:open:local": "./scripts/run-cypress.sh -sol",
    "cypress:smoketests:open": "./scripts/run-cypress.sh -sco",
    "cypress:smoketests": "./scripts/run-cypress.sh -s",
    "delete:api-gateway-mappings": "./scripts/delete-api-gateway-mappings.sh",
    "delete:dynamo-table": "./scripts/dynamo/delete-dynamo-table.sh",
    "delete:elasticsearch-cluster": "./scripts/elasticsearch/delete-elasticsearch-cluster.sh",
    "deploy:account-specific": "cd iam/terraform/account-specific/main && ../bin/deploy-app.sh",
    "deploy:api": "cd web-api/terraform/main && ../bin/deploy-app.sh",
    "deploy:ci-image": "./docker-to-ecr.sh",
    "deploy:environment-specific": "cd iam/terraform/environment-specific/main && ../bin/deploy-app.sh",
    "deploy:glue-cron": "cd web-api/workflow-terraform/glue-cron/main && ../bin/deploy-app.sh",
    "deploy:migration": "cd web-api/workflow-terraform/migration/main && ../bin/deploy-app.sh",
    "deploy:migration-cron": "cd web-api/workflow-terraform/migration-cron/main && ../bin/deploy-app.sh",
    "deploy:public-ui:files": "./web-client/deploy-public.sh",
    "deploy:reindex-cron": "cd web-api/workflow-terraform/reindex-cron/main && ../bin/deploy-app.sh",
    "deploy:switch-colors-cron": "cd web-api/workflow-terraform/switch-colors-cron/main && ../bin/deploy-app.sh",
    "deploy:ui": "cd web-client/terraform/main && ../bin/deploy-app.sh",
    "deploy:ui:files": "./web-client/deploy-ui.sh",
    "deploy:wait-for-workflow-cron": "cd web-api/workflow-terraform/wait-for-workflow-cron/main && ../bin/deploy-app.sh",
    "destroy:api": "cd web-api/terraform/main && ../bin/destroy-app.sh",
    "destroy:client": "cd web-client/terraform/main && ../bin/destroy-app.sh",
    "destroy:env": "npx ts-node --transpile-only env-destroy-utils/destroyEnvironment.js",
    "destroy:glue-cron": "cd web-api/workflow-terraform/glue-cron/main && ../bin/destroy-app.sh",
    "destroy:migration": "cd web-api/workflow-terraform/migration/main && ../bin/destroy-app.sh",
    "destroy:migration-cron": "cd web-api/workflow-terraform/migration-cron/main && ../bin/destroy-app.sh",
    "destroy:reindex-cron": "cd web-api/workflow-terraform/reindex-cron/main && ../bin/destroy-app.sh",
    "destroy:switch-colors-cron": "cd web-api/workflow-terraform/switch-colors-cron/main && ../bin/destroy-app.sh",
    "destroy:wait-for-workflow-cron": "cd web-api/workflow-terraform/wait-for-workflow-cron/main && ../bin/destroy-app.sh",
    "docs": "npx docsify-cli serve ./docs",
    "dynamo:admin": "AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER DYNAMO_ENDPOINT=http://localhost:8000 dynamodb-admin",
    "dynamo:export": "AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SLS_DEPLOYMENT_BUCKET=noop npx ts-node --transpile-only web-api/dynamo-export.js > ./web-api/storage/fixtures/efcms-export.json",
    "dynamo:import": "npx ts-node --transpile-only ./web-api/create-dynamo-tables.js && AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER npx ts-node --transpile-only ./web-api/seed-dynamo.ts ./storage/fixtures/efcms-export.json",
    "init:api": "cd web-api/terraform/main && ../bin/deploy-init.sh",
    "init:ui": "cd web-client/terraform/main && ../bin/deploy-init.sh",
    "lint:css:fix": "npm run lint:css -- --fix",
    "lint:css": "stylelint web-client/src/**/*.scss",
    "lint:file": "TIMING=1 eslint --",
    "esbuild:build": "node esbuild.config.mjs",
    "esbuild:start": "node esbuild.config.mjs -w",
    "git:pr-to-test": "./scripts/pr-to-test.sh",
    "lint:fix": "run-p lint:css:fix lint:js/ts:fix",
    "lint:js/ts:fix:plain": "npm run lint:js/ts:fix -- --rule 'prettier/prettier: 0'",
    "lint:js/ts:fix": "npm run lint:js/ts -- --fix",
    "lint:js/ts": "TIMING=1 eslint --ext .js,.jsx,.ts,.tsx shared/src/ web-api/storage/ web-api/src/ web-client/src/ web-client/integration-tests/ web-client/integration-tests-public/",
    "lint:swagger": "swagger-cli validate web-api/swagger.json && swagger-cli validate docs/api/v1.yaml && swagger-cli validate docs/api/v2.yaml",
    "lint": "run-p lint:swagger lint:css lint:js/ts",
    "loadtest:pdf-generation": "npx ts-node --transpile-only ./web-api/storage/scripts/loadTest/loadTestPdfGeneration.ts",
    "maintenance:disengage": "./scripts/dynamo/set-maintenance-mode.sh false",
    "maintenance:engage": "./scripts/dynamo/set-maintenance-mode.sh true",
    "maintenance:disengage:local": ". ./setup-local-env.sh && npx ts-node --transpile-only scripts/set-maintenance-mode-locally.js false",
    "maintenance:engage:local": ". ./setup-local-env.sh && npx ts-node --transpile-only scripts/set-maintenance-mode-locally.js true",
    "migrate:local": "DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://0.0.0.0:9000 AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SOURCE_TABLE=efcms-local DESTINATION_TABLE=efcms-local-1 ts-node --transpile-only ./web-api/run-local-migration.ts",
    "migration:cleanup": "./scripts/dynamo/update-deploy-table-after-migration.sh",
    "pending-color-switch": "./web-client/pending-color-switch.sh",
    "postinstall": "husky install && cd cognito-triggers-sls && npm ci",
    "print:success": "echo 'Build successful. You can access the site at http://localhost:1234'",
    "reindex:elasticsearch": "./reindex-elasticsearch.sh",
    "reset-cases": "./clear-env.sh",
    "secrets:rotate-circleci": "./shared/admin-tools/user/rotate-circleci-secrets.sh",
    "secrets:rotate-environment": "npx ts-node shared/admin-tools/user/rotate-environment-secrets.ts",
    "seed:db": "./seed-dynamo.sh",
    "seed:elasticsearch": "./web-api/seed-elasticsearch.sh",
    "seed:s3:lint": "pushd ./web-api/storage/fixtures && grep documentId seed/*json | ./validate-seed.js && popd",
    "seed:s3": "cp -R ./web-api/storage/fixtures/s3/* ./web-api/storage/s3",
    "seed": "run-p seed:db seed:s3",
    "shell": "docker-compose run -it shell /bin/bash",
    "start:all:ci": "run-p start:api:ci start:client:ci start:public:ci",
    "start:all:cognito-local:ci": "run-p start:api:cognito-local:ci start:client:ci start:public:ci",
    "start:all:docker": "docker build -t efcms -f Dockerfile-local . && docker-compose up",
    "start:api:ci": "CI=true npm run start:api",
    "start:api:resume": "RESUME=true npm run start:api",
    "start:api": "USTC_ENV=dev ./run-local.sh",
    "start:api:docker": "USTC_ENV=dev ./run-api.sh",
    "start:api:cognito-local": "USTC_ENV=dev USE_COGNITO_LOCAL=true ./run-local.sh",
    "start:api:cognito-local:ci": "CI=true npm run start:api:cognito-local",
    "start:client:ci": "CI=true SKIP_VIRUS_SCAN=true NODE_ENV=production npm run start:client",
    "start:client:no-scanner": "NO_SCANNER=true npm run start:client",
    "start:client": "npm run start:client-host && WATCH=true IS_LOCAL=true FILE_UPLOAD_MODAL_TIMEOUT=1 USTC_ENV=dev PDF_EXPRESS_LICENSE_KEY=OjkUB41bl1hJg6jvUEfn npm run start:client:esbuild",
    "start:client:cognito-local": "USE_COGNITO_LOCAL=true npm run start:client",
    "start:client-host": "servor dist index.html 1234 &",
    "start:client:esbuild": "node esbuild.config.mjs",
    "start:cognito-triggers-local": "cd cognito-triggers-sls && npx sls offline",
    "start:madge": "node ./graph-generators/index.js",
    "start:migration": "node ./web-api/send-migration-segment-messages.js",
    "start:public:ci": "npm run clean:public && CI=true npm run start:public",
    "start:public-host": "servor dist-public index.html 5678 &",
    "start:public": "npm run start:public-host && CHECK_DEPLOY_DATE_INTERVAL=5000 WATCH=true USTC_ENV=dev IS_LOCAL=true PDF_EXPRESS_LICENSE_KEY=OjkUB41bl1hJg6jvUEfn node esbuild.public.config.mjs",
    "start:s3rver": "s3rver -d web-api/storage/s3 -a 0.0.0.0 -p 9000 --configure-bucket $DOCUMENTS_BUCKET_NAME web-api/cors-policy.xml --configure-bucket $TEMP_DOCUMENTS_BUCKET_NAME web-api/cors-policy.xml",
    "switch-colors": "./web-client/switch-colors.sh",
    "test:_client:parallel": "NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --maxWorkers=50% --config web-client/jest-unit.config.ts",
    "test:_client": "NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --runInBand --config web-client/jest.config.ts",
    "test:api": "npm run build:assets && jest --config web-api/jest-unit.config.ts",
    "test:api:file": "npm run build:assets && jest --config web-api/jest-unit.config.ts --coverage=false",
    "test:client:_integration": "NO_SCANNER=true SKIP_VIRUS_SCAN=true IS_LOCAL=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER TEMP_DOCUMENTS_BUCKET_NAME=noop-temp-documents-local-us-east-1 QUARANTINE_BUCKET_NAME=noop-quarantine-local-us-east-1 DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://0.0.0.0:9000 jest --runInBand --config web-client/jest-integration.config.ts",
    "test:client:integration:cognito-local": "npm run test:client:_integration -- --testPathPattern='web-client/integration-tests-cognito-local/.*\\.test\\.ts'",
    "test:client:integration:cognito-local:ci": "npm run test:client:_integration -- --coverageDirectory=./coverage-integration-${CIRCLE_NODE_INDEX} ${TESTFILES}",
    "test:client:integration:ci": "npm run test:client:_integration -- --coverageDirectory=./coverage-integration-${CIRCLE_NODE_INDEX} ${TESTFILES}",
    "test:client:unit": "jest --config web-client/jest-unit.config.ts --testMatch '**/web-client/src/**/?(*.)+(spec|test).[jt]s?(x)'",
    "test:client:unit:ci": "jest --config web-client/jest-unit.config.ts --coverageDirectory=./coverage/${NODE_INDEX} ${TESTFILES}",
    "test:scripts": "jest --config scripts/jest-scripts.config.ts",
    "test:file": "IS_LOCAL=true CI=false NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER FILE_UPLOAD_MODAL_TIMEOUT=1 jest --config web-client/jest-integration.config.ts -- ",
    "test:performance": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/private-app-report.json ./artillery/private-app.yml",
    "test:performance:messages": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/read-messages-report.json ./artillery/read-messages.yml && artillery report ./artillery/read-messages-report.json",
    "test:performance:document-qc": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/read-qc-section-messages.json ./artillery/read-qc-section-messages.yml && artillery report ./artillery/read-qc-section-messages.json",
    "test:performance:order": "MULTICORE=1 ARTILLERY_WORKERS=4 artillery run -o ./artillery/private-advanced-order.json ./artillery/private-advanced-order.yml",
    "test:pa11y:1": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-1.config.js",
    "test:pa11y:2": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-2.config.js",
    "test:pa11y:3": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-3.config.js",
    "test:pa11y:4": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-4.config.js",
    "test:pa11y:public": "pa11y-ci --config ./web-client/pa11y/pa11y-ci-public.config.js",
    "test:pa11y:public-search": "pa11y-ci --config ./web-client/pa11y/pa11y-ci-public-search.config.js",
    "test:pa11y:screenshots:capture": "mkdir -p ./web-client/pa11y/pa11y-screenshots/new/ ./web-client/pa11y/pa11y-screenshots/old/ && cp -R ./web-client/pa11y/pa11y-screenshots/new/ ./web-client/pa11y/pa11y-screenshots/old/",
    "test:pa11y:screenshots": "npm run test:pa11y:screenshots:capture && pa11y-ci --config ./web-client/pa11y/pa11y-ci-screenshots.config.js && rm -rf ./web-client/pa11y/pa11y-screenshots/diffs/* && node ./web-client/pa11y/compare-screenshots.js",
    "test:pa11y:smoketests": ". ./set-tokens.sh && pa11y-ci --config ./web-client/pa11y/pa11y-ci-smoketests.config.js",
    "test:pa11y": "npm run test:pa11y:1 && npm run test:pa11y:2 && npm run test:pa11y:3 && npm run test:pa11y:4",
    "test:document-generation": "npm run build:assets && jest --config shared/src/business/utilities/documentGenerators/document_generator.jest.config.ts",
    "test:shared": "npm run build:assets && jest --config shared/jest-shared.config.ts",
    "test:shared:ci": "npm run build:assets && jest --config shared/jest-shared.config.ts --coverageDirectory=./coverage/${NODE_INDEX} ${TESTFILES}",
    "test:watch": "jest --watch .*test\\.js$",
    "test": "echo 'Best run with start:api:ci and start:client:ci' && sleep 3 && CI=true npx run-s test:shared test:api test:client test:pa11y cypress lint --prefix=web-client/pa11y/",
    "verify-authorizers": "./scripts/circleci/verify-authorizers.sh",
    "verify-private-elasticsearch": "./scripts/circleci/verify-private-elasticsearch.sh",
    "verify-private-s3-buckets": "./scripts/circleci/verify-private-s3-buckets.sh",
    "verify-cognito-lambda-triggers": "./scripts/circleci/verify-cognito-lambda-triggers.sh",
    "visualize-bundle": "esbuild-visualizer --metadata ./metadata.json && open stats.html",
    "watch": "nodemon -e yml --exec sls offline start"
  },
  "overrides": {
    "axios": "$axios",
    "jsonwebtoken": "$jsonwebtoken",
    "postcss": "8.4.32",
    "semver": "^7.5.2"
  },
  "devDependencies": {
    "@aws-sdk/client-iam": "^3.465.0",
    "@aws-sdk/client-secrets-manager": "^3.465.0",
    "@babel/cli": "^7.23.4",
    "@babel/core": "^7.23.5",
    "@babel/eslint-parser": "^7.23.3",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@babel/register": "^7.22.15",
    "@faker-js/faker": "^8.3.1",
    "@miovision/eslint-plugin-disallow-date": "^2.0.0",
    "@sparticuz/chromium": "112.0.2",
    "@types/aws-lambda": "^8.10.130",
    "@types/jest": "^29.5.10",
    "@types/lodash": "^4.14.202",
    "@types/luxon": "^3.3.7",
    "@types/node": "^20.10.3",
    "@types/promise-retry": "^1.1.6",
    "@types/react": "^18.2.42",
    "@types/react-dom": "^18.2.17",
    "@types/react-paginate": "^7.1.4",
    "@types/uuid": "^9.0.7",
    "@types/websocket": "^1.0.10",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "@vendia/serverless-express": "^4.10.4",
    "adm-zip": "^0.5.10",
    "ajv": "^8.12.0",
    "artillery": "^2.0.2",
    "artillery-plugin-metrics-by-endpoint": "^1.2.0",
    "autoprefixer": "^10.4.16",
    "aws-sdk-client-mock": "^3.0.0",
    "axios-retry": "^4.0.0",
    "babel-jest": "^29.7.0",
    "babel-loader": "^9.1.3",
    "babel-plugin-cerebral": "^1.0.1",
    "babel-plugin-transform-html-import-require-to-string": "^0.0.3",
    "checksum": "^1.0.0",
    "cognito-local": "^3.23.2",
    "copy-webpack-plugin": "^11.0.0",
    "crypto-browserify": "^3.12.0",
    "css-loader": "^6.8.1",
    "csv-parse": "^5.5.2",
    "cypress": "^13.6.0",
    "cypress-file-upload": "^5.0.8",
    "decimal.js": "^10.4.3",
    "dynamodb-admin": "^4.6.1",
    "dynamodb-streams-readable": "^3.0.0",
    "esbuild-plugin-babel-cached": "^0.2.3",
    "esbuild-plugin-clean": "^1.0.1",
    "esbuild-plugin-copy": "^2.1.1",
    "esbuild-plugin-resolve": "^2.0.0",
    "esbuild-plugin-svg": "^0.1.0",
    "esbuild-serve": "^1.0.1",
    "esbuild-visualizer": "^0.4.1",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-cypress": "^2.15.1",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sort-destructure-keys": "^1.5.0",
    "eslint-plugin-sort-imports-es6-autofix": "^0.6.0",
    "eslint-plugin-sort-keys-fix": "^1.1.2",
    "eslint-plugin-sort-requires-fix": "^2.1.2",
    "eslint-plugin-spellcheck": "^0.0.20",
    "esm": "^3.2.25",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.3",
    "html-webpack-pug-plugin": "^4.0.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jsdom": "^23.0.1",
    "json2yaml": "^1.1.0",
    "lint-staged": "^15.2.0",
    "lint-staged-shellcheck": "^0.1.2",
    "livereload": "^0.9.3",
    "nodemon": "^3.0.2",
    "npm-run-all": "^4.1.5",
    "pa11y-ci": "^3.1.0",
    "pdf2pic": "^3.1.0",
    "pixelmatch": "^5.3.0",
    "pngjs": "^7.0.0",
    "postcss": "8.4.32",
    "postcss-loader": "^7.3.3",
    "postcss-preset-env": "^9.3.0",
    "prettier": "^3.1.0",
    "prop-types": "^15.8.1",
    "puppeteer": "19.8.5",
    "puppeteer-core": "19.8.5",
    "react-test-renderer": "^18.2.0",
    "readline": "^1.3.0",
    "s3rver": "github:20minutes/s3rver",
    "sass": "^1.69.5",
    "sass-loader": "^13.3.2",
    "shuffle-seed": "^1.1.6",
    "stream-browserify": "^3.0.0",
    "style-loader": "^3.3.3",
    "stylelint": "^15.11.0",
    "stylelint-config-idiomatic-order": "^9.0.0",
    "stylelint-config-standard": "^34.0.0",
    "stylelint-config-standard-scss": "^11.1.0",
    "swagger-cli": "^4.0.4",
    "tiff2pdf": "^1.0.2",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^5.3.2",
    "utf8": "^3.0.0",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^4.15.1"
  }
}
