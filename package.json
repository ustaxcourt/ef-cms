{
  "name": "ef-cms",
  "description": "US Tax Court Management System",
  "version": "0.1.0",
  "license": "CC0-1.0",
  "repository": "https://github.com/ustaxcourt/ef-cms",
  "dependencies": {
    "@babel/cli": "^7.12.10",
    "@babel/core": "^7.12.10",
    "@babel/preset-env": "^7.12.10",
    "@babel/preset-react": "^7.12.10",
    "@babel/register": "^7.12.10",
    "@cerebral/react": "4.2.1-1584683380023",
    "@fortawesome/fontawesome-svg-core": "^1.2.32",
    "@fortawesome/free-regular-svg-icons": "^5.15.1",
    "@fortawesome/free-solid-svg-icons": "^5.15.1",
    "@fortawesome/react-fontawesome": "^0.1.13",
    "@hapi/joi-date": "^2.0.1",
    "@vendia/serverless-express": "^3.4.0",
    "@wojtekmaj/enzyme-adapter-react-17": "^0.3.2",
    "archiver": "^5.1.0",
    "autoprefixer": "^9.8.6",
    "aws-sdk": "^2.810.0",
    "axios": "^0.21.0",
    "axios-retry": "^3.1.9",
    "babel-eslint": "^10.0.3",
    "babel-jest": "^26.6.3",
    "babel-plugin-cerebral": "^1.0.1",
    "babel-plugin-transform-html-import-require-to-string": "^0.0.3",
    "body-parser": "^1.19.0",
    "cerebral": "5.2.1-1584683380023",
    "chrome-aws-lambda": "^5.5.0",
    "classnames": "^2.2.6",
    "core-js": "^3.8.1",
    "cors": "^2.8.5",
    "csv-parse": "^4.14.1",
    "cypress": "^6.1.0",
    "deep-freeze": "0.0.1",
    "diff-arrays-of-objects": "^1.1.7",
    "dynamodb-admin": "^4.0.0",
    "dynamodb-streams-readable": "^1.1.0",
    "elasticsearch": "^16.7.2",
    "enzyme": "^3.11.0",
    "eslint": "^7.15.0",
    "eslint-config-prettier": "^7.0.0",
    "eslint-plugin-cypress": "^2.11.2",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.3",
    "eslint-plugin-jsdoc": "^30.7.8",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.3.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-sort-destructure-keys": "^1.3.5",
    "eslint-plugin-sort-imports-es6-autofix": "^0.5.0",
    "eslint-plugin-sort-keys-fix": "^1.1.0",
    "eslint-plugin-sort-requires": "^2.1.0",
    "eslint-plugin-spellcheck": "^0.0.17",
    "esm": "^3.2.25",
    "express": "^4.17.1",
    "faker": "^5.1.0",
    "form-data": "^3.0.0",
    "honeybadger": "^1.4.0",
    "honeybadger-js": "^2.3.0",
    "http-aws-es": "^6.0.0",
    "husky": "^4.3.6",
    "i": "^0.3.6",
    "imagemin": "^7.0.1",
    "imagemin-pngquant": "^9.0.1",
    "jest": "^26.6.3",
    "joi": "^17.3.0",
    "jsdoc": "^3.6.6",
    "jsdom": "^16.4.0",
    "json2yaml": "^1.1.0",
    "jsonwebtoken": "^8.5.1",
    "jwk-to-pem": "^2.0.4",
    "lint-staged": "^10.5.3",
    "lodash": "^4.17.20",
    "logform": "^2.2.0",
    "madge": "^3.12.0",
    "moize": "^5.4.7",
    "moment": "^2.29.1",
    "moment-timezone": "^0.5.32",
    "nodemon": "^2.0.6",
    "npm-force-resolutions": "0.0.3",
    "npm-run-all": "^4.1.5",
    "object-sizeof": "^1.6.1",
    "openapi-types": "^7.0.1",
    "pa11y-ci": "^2.4.0",
    "parcel-bundler": "^1.12.4",
    "parcel-plugin-bundle-visualiser": "^1.2.0",
    "parcel-plugin-static-files-copy": "^2.5.0",
    "parse-full-name": "^1.2.4",
    "pdf-lib": "^1.13.0",
    "pdfjs-dist": "2.3.200",
    "pixelmatch": "^5.2.1",
    "pngjs": "^6.0.0",
    "postcss": "^8.2.1",
    "prettier": "^2.2.1",
    "prop-types": "^15.7.2",
    "pug": "^3.0.0",
    "puppeteer": "^5.5.0",
    "puppeteer-core": "^5.5.0",
    "qs": "^6.9.2",
    "query-string": "^6.13.7",
    "quill-delta-to-html": "^0.12.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-idle-timer": "^4.5.0",
    "react-number-format": "^4.4.1",
    "react-quill": "^2.0.0-beta.2",
    "react-responsive": "^8.1.1",
    "react-select": "^3.1.1",
    "react-test-renderer": "^17.0.1",
    "readline": "^1.3.0",
    "riot-route": "^3.1.4",
    "s3-files": "^2.0.1",
    "s3rver": "^3.6.1",
    "sanitize-filename": "^1.6.3",
    "sass": "^1.30.0",
    "stylelint": "^13.8.0",
    "stylelint-config-idiomatic-order": "^8.1.0",
    "stylelint-config-standard": "^20.0.0",
    "swagger-cli": "^4.0.4",
    "tmp": "^0.2.1",
    "uswds": "^2.9.0",
    "uuid": "^8.3.2",
    "websocket": "^1.0.33",
    "wicg-inert": "^3.1.0",
    "winston": "^3.3.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "eslint"
    ],
    "*.{css,scss}": [
      "stylelint"
    ],
    "**/entities/**/*.js": [
      "npm run build:entity:docs",
      "git add **/*md"
    ],
    "swagger.json": [
      "swagger-cli validate"
    ]
  },
  "scripts": {
    "build:all": "npm run clean && npm run build:assets && npm run build:client:no-sourcemaps",
    "build:assets": "node shared/createModule.js",
    "build:client:no-sourcemaps": "USTC_ENV=prod parcel build --no-source-maps web-client/src/index.pug",
    "build:client": "USTC_ENV=prod parcel build web-client/src/index.pug",
    "build:entity:docs": "node shared/src/tools/generateMarkdownSchema.js",
    "build:jsdoc": "jsdoc -c web-client/jsdoc.conf.json",
    "build:public": "USTC_ENV=prod parcel build -d dist-public web-client/src/index-public.pug -o index.html",
    "clean:public": "rm -rf dist-public/",
    "clean": "./reset-dependencies.sh CLEAN_ONLY",
    "cypress:open": "TEMP_DOCUMENTS_BUCKET_NAME=noop-temp-documents-local-us-east-1 DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://localhost:9000 MASTER_DYNAMODB_ENDPOINT=http://localhost:8000  AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SLS_DEPLOYMENT_BUCKET=noop cypress open",
    "cypress:public:open": "TEMP_DOCUMENTS_BUCKET_NAME=noop-temp-documents-local-us-east-1 DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://localhost:9000 MASTER_DYNAMODB_ENDPOINT=http://localhost:8000  AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SLS_DEPLOYMENT_BUCKET=noop cypress open --config-file cypress-public.json",
    "cypress:public": "TEMP_DOCUMENTS_BUCKET_NAME=noop-temp-documents-local-us-east-1 DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://localhost:9000 MASTER_DYNAMODB_ENDPOINT=http://localhost:8000  AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SLS_DEPLOYMENT_BUCKET=noop cypress run --spec cypress/integration/public/** --config-file cypress-public.json",
    "cypress:smoketests:open": "CYPRESS_BASE_URL=https://app-$DEPLOYING_COLOR.$EFCMS_DOMAIN cypress open -C cypress-smoketests.json --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY,ENV=$ENV,EFCMS_DOMAIN=$EFCMS_DOMAIN,DEPLOYING_COLOR=$DEPLOYING_COLOR,DEFAULT_ACCOUNT_PASS=$DEFAULT_ACCOUNT_PASS,USTC_ADMIN_PASS=$USTC_ADMIN_PASS,DISABLE_EMAILS=$DISABLE_EMAILS",
    "cypress:smoketests": "CYPRESS_BASE_URL=https://app-$DEPLOYING_COLOR.$EFCMS_DOMAIN cypress run -C cypress-smoketests.json --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY,ENV=$ENV,EFCMS_DOMAIN=$EFCMS_DOMAIN,DEPLOYING_COLOR=$DEPLOYING_COLOR,DEFAULT_ACCOUNT_PASS=$DEFAULT_ACCOUNT_PASS,USTC_ADMIN_PASS=$USTC_ADMIN_PASS,DISABLE_EMAILS=$DISABLE_EMAILS",
    "cypress": "TEMP_DOCUMENTS_BUCKET_NAME=noop-temp-documents-local-us-east-1 DOCUMENTS_BUCKET_NAME=noop-documents-local-us-east-1 S3_ENDPOINT=http://localhost:9000 MASTER_DYNAMODB_ENDPOINT=http://localhost:8000  AWS_ACCESS_KEY_ID=S3RVER AWS_SECRET_ACCESS_KEY=S3RVER SLS_DEPLOYMENT_BUCKET=noop cypress run --spec \"cypress/integration/*\"",
    "deploy:account-specific": "cd iam/terraform/account-specific/main && ../bin/deploy-app.sh",
    "deploy:api": "cd web-api/terraform/main && ../bin/deploy-app.sh",
    "deploy:environment-specific": "cd iam/terraform/environment-specific/main && ../bin/deploy-app.sh",
    "deploy:migration": "cd web-api/migration-terraform/main && ../bin/deploy-app.sh",
    "deploy:ui": "cd web-client/terraform/main && ../bin/deploy-app.sh",
    "destroy:dev": "node env-destroy-utils/destroyEnvironment.js dev",
    "destroy:exp1": "node env-destroy-utils/destroyEnvironment.js exp1",
    "destroy:exp2": "node env-destroy-utils/destroyEnvironment.js exp2",
    "destroy:exp3": "node env-destroy-utils/destroyEnvironment.js exp3",
    "destroy:migration": "cd web-api/migration-terraform/main && ../bin/destroy-app.sh",
    "destroy:prod": "node env-destroy-utils/destroyEnvironment.js prod",
    "destroy:stg": "node env-destroy-utils/destroyEnvironment.js stg",
    "dynamo:admin": "DYNAMO_ENDPOINT=http://localhost:8000 dynamodb-admin",
    "dynamo:export": "AWS_ACCESS_KEY_ID=noop AWS_SECRET_ACCESS_KEY=noop SLS_DEPLOYMENT_BUCKET=noop node web-api/dynamo-export.js > ./web-api/storage/fixtures/efcms.json",
    "dynamo:import": "pushd ./web-api && node ./create-dynamo-tables.js && node ./seed-dynamo.js ./storage/fixtures/efcms.json && popd",
    "init:api": "cd web-api/terraform/main && ../bin/deploy-init.sh",
    "init:ui": "cd web-client/terraform/main && ../bin/deploy-init.sh",
    "lint:css:fix": "npm run lint:css -- --fix",
    "lint:css": "stylelint web-client/src/**/*.scss",
    "lint:file": "TIMING=1 eslint --",
    "lint:fix": "run-p lint:css:fix lint:js:fix",
    "lint:js:fix:plain": "npm run lint:js:fix -- --rule 'prettier/prettier: 0'",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:js": "TIMING=1 eslint --ext .js,.jsx shared/src/ web-api/storage/ web-api/src/ web-client/src/ web-client/integration-tests/",
    "lint:swagger": "swagger-cli validate web-api/swagger.json",
    "lint": "npx run-p lint:swagger lint:css lint:js",
    "loadtest:high": "./web-api/load-test-trial-session.sh dev us-east-1 150",
    "loadtest:medium": "./web-api/load-test-trial-session.sh dev us-east-1 125",
    "loadtest:practitioners": "./web-api/load-test-practitioners.sh dev us-east-1 200",
    "loadtest:small": "./web-api/load-test-trial-session.sh dev us-east-1 100",
    "migrate:local": "SOURCE_TABLE=efcms-local DESTINATION_TABLE=efcms-local-1 node ./web-api/run-local-migration.js",
    "preinstall": "npx npm-force-resolutions",
    "print:success": "echo 'Build successful. You can access the site at http://localhost:1234'",
    "reindex:elasticsearch": "./reindex-elasticsearch.sh",
    "reset-cases": "./clear-env.sh",
    "seed:db": "node ./web-api/create-dynamo-tables.js && node ./web-api/seed-dynamo.js",
    "seed:elasticsearch": "./web-api/seed-elasticsearch.sh",
    "seed:s3:lint": "pushd ./web-api/storage/fixtures && grep documentId seed/*json | ./validate-seed.js && popd",
    "seed:s3": "cp -R ./web-api/storage/fixtures/s3/* ./web-api/storage/s3",
    "seed": "run-p seed:db seed:s3",
    "start:api:ci": "CI=true npm run start:api",
    "start:api:resume": "RESUME=true npm run start:api",
    "start:api": "USTC_ENV=dev ./run-local.sh",
    "start:client:ci": "CI=true SKIP_VIRUS_SCAN=true NODE_ENV=production npm run start:client",
    "start:client:debug": "USTC_DEBUG=true npm run start:client",
    "start:client:no-scanner": "NO_SCANNER=true npm run start:client",
    "start:client": "FILE_UPLOAD_MODAL_TIMEOUT=1 USTC_ENV=dev parcel --no-hmr --no-cache --no-source-maps web-client/src/index.pug",
    "start:madge": "node ./graph-generators/index.js",
    "start:migration": "node ./web-api/send-migration-segment-messages.js",
    "start:public:ci": "npm run clean:public && CI=true USTC_ENV=dev parcel --port 5678 -d dist-public --no-hmr --no-cache --no-source-maps web-client/src/index-public.pug",
    "start:public": "npm run clean:public && USTC_ENV=dev parcel --port 5678 -d dist-public --no-cache --no-source-maps web-client/src/index-public.pug",
    "start:s3rver": "s3rver -d web-api/storage/s3 -a 0.0.0.0 -p 9000 --configure-bucket $DOCUMENTS_BUCKET_NAME web-api/cors-policy.xml --configure-bucket $TEMP_DOCUMENTS_BUCKET_NAME web-api/cors-policy.xml",
    "switch-colors": "./web-client/switch-colors.sh",
    "test:_client:parallel": "NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=noop AWS_SECRET_ACCESS_KEY=noop FILE_UPLOAD_MODAL_TIMEOUT=1 jest --maxWorkers=50% --config web-client/jest-unit.config.js",
    "test:_client": "NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=noop AWS_SECRET_ACCESS_KEY=noop FILE_UPLOAD_MODAL_TIMEOUT=1 jest --runInBand --config web-client/jest.config.js",
    "test:api:ci": "npm run build:assets && jest --runInBand --detectOpenHandles --config web-api/jest.config.js \"web-api/.*\\.test\\.js\"",
    "test:api": "npm run build:assets && jest --maxWorkers=50% --config web-api/jest.config.js \"web-api/.*\\.test\\.js\"",
    "test:client:_integration": "npm run test:_client -- ",
    "test:client:integration:local": "node --expose-gc ./node_modules/.bin/jest --runInBand --detectOpenHandles --logHeapUsage --ci --config web-client/jest.config.js \"web-client/integration-tests/.*\\.test\\.js\"",
    "test:client:integration": "npm run test:client:_integration \"web-client/integration-tests/.*\\.test\\.js\"",
    "test:client:unit:ci": "jest --runInBand --detectOpenHandles --forceExit --config web-client/jest-unit.config.js \"web-client/src/.*\\.test\\.js\"",
    "test:client:unit": "npm run test:_client:parallel -- \"web-client/src/.*\\.test\\.js\"",
    "test:client": "CI=false npm run test:_client -- \"web-client/.*\\.test\\.js\"",
    "test:debug": "NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=noop AWS_SECRET_ACCESS_KEY=noop FILE_UPLOAD_MODAL_TIMEOUT=1 jest --detectOpenHandles --logHeapUsage --runInBand --config web-client/jest.config.js",
    "test:file": "CI=false NO_SCANNER=true SKIP_VIRUS_SCAN=true AWS_ACCESS_KEY_ID=noop AWS_SECRET_ACCESS_KEY=noop FILE_UPLOAD_MODAL_TIMEOUT=1 jest --verbose --no-coverage --runInBand --config web-client/jest.config.js -- ",
    "test:pa11y:1": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-1.config.js",
    "test:pa11y:2": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-2.config.js",
    "test:pa11y:3": "pa11y-ci --config ./web-client/pa11y/pa11y-ci.web-client-3.config.js",
    "test:pa11y:public": "pa11y-ci --config ./web-client/pa11y/pa11y-ci-public.config.js",
    "test:pa11y:screenshots:capture": "mkdir -p ./web-client/pa11y/pa11y-screenshots/new/ ./web-client/pa11y/pa11y-screenshots/old/ && cp -R ./web-client/pa11y/pa11y-screenshots/new/ ./web-client/pa11y/pa11y-screenshots/old/",
    "test:pa11y:screenshots": "npm run test:pa11y:screenshots:capture && pa11y-ci --config ./web-client/pa11y/pa11y-ci-screenshots.config.js && rm -rf ./web-client/pa11y/pa11y-screenshots/diffs/* && node ./web-client/pa11y/compare-screenshots.js",
    "test:pa11y:smoketests": ". ./set-tokens.sh && pa11y-ci --config ./web-client/pa11y/pa11y-ci-smoketests.config.js",
    "test:pa11y": "npm run test:pa11y:1 && npm run test:pa11y:2 && npm run test:pa11y:3",
    "test:pdf-output": "npm run build:assets && PDF_OUTPUT=true jest shared/src/business/utilities/documentGenerators.test.js",
    "test:public:integration": "npm run test:client:_integration \"web-client/integration-tests-public/.*\\.test\\.js\"",
    "test:shared:ci": "npm run build:assets && jest --runInBand --detectOpenHandles --config shared/jest.config.js \"shared/.*\\.test\\.js\"",
    "test:shared": "npm run build:assets && jest --maxWorkers=50% --config shared/jest.config.js \"shared/.*\\.test\\.js\"",
    "test:watch": "jest --watch .*test\\.js$",
    "test": "echo 'Best run with start:api:ci and start:client:ci' && sleep 3 && CI=true npx run-s test:shared test:api test:client test:pa11y cypress lint --prefix=web-client/pa11y/",
    "verify-authorizers": "./web-api/verify-authorizers.sh",
    "verify-private-elasticsearch": "./web-api/verify-private-elasticsearch.sh",
    "verify-private-s3-buckets": "./web-api/verify-private-s3-buckets.sh",
    "watch": "nodemon -e yml --exec sls offline start"
  },
  "staticFiles": {
    "staticPath": [
      "node_modules/pdfjs-dist/build",
      "node_modules/react-quill/dist",
      "node_modules/pdf-lib/dist"
    ],
    "watcherGlob": false
  },
  "resolutions": {
    "bl": "^4.0.3",
    "lodash": "^4.17.20",
    "minimist": "^1.2.5",
    "node-fetch": "^2.6.1",
    "node-forge": "^0.10.0",
    "yargs-parser": "^18.1.3"
  },
  "postcss": {
    "plugins": {
      "autoprefixer": {}
    }
  }
}
